<h2>Downloads</h2>


<p>The latest available version of weborf can be downloaded <a href="https://github.com/ltworf/weborf/releases">here</a>.</p>
<p>It is already available in the repositories of <i>Debian</i> and <i>Ubuntu</i>.</p>

<table id="dtable"></table>
<p id="nojs">Javascript is disabled. Please go to the <a href="https://github.com/ltworf/weborf/tags">github download page</a>.</p>

<p><a href="http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xB3A7CF0C801886CF">PGP public key</a> to use to verify the signature.</p>

<p>All the downloads: <a href="https://github.com/ltworf/weborf/tags">list of tags</a>.</p>

<script>
document.getElementById("nojs").innerHTML = 'Loading downloads...';

var xmlhttp = new XMLHttpRequest();
var url = "https://api.github.com/repos/ltworf/weborf/releases/latest";

xmlhttp.onreadystatechange = function() {
    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        var myArr = JSON.parse(xmlhttp.responseText);
        myFunction(myArr);
    }
}
xmlhttp.open("GET", url, true);
xmlhttp.send();

function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}

function get_size(bytes) {

    size_unit = 'B'
    if (bytes > 1024) {
        bytes = Math.floor(bytes/1024)
        size_unit = 'KiB'
    }

    if (bytes > 1024) {
        bytes = Math.floor(bytes/1024)
        size_unit = 'MiB'
    }

    return bytes + size_unit
}

function get_name(name) {
    if (endsWith(name,'.exe'))
        return 'Windows download'
    if (endsWith(name,'.tar.gz'))
        return 'Sources'
    if (endsWith(name,'.tar.gz.asc'))
        return 'PGP Signature'
    return name
}

function myFunction(arr) {
    out = '<tr>'
    out += '<td>File</td>'
    out += '<td>Size</td>'
    out += '<td>Date</td>'
    out += '<td>Download count</td>'
    out += '</tr>'

    assets = arr['assets']

    for (i=0; i<assets.length;i++) {
        asset = assets[i]

        if (asset['state'] != 'uploaded')
            continue;

        out += '<tr>'

        out += '<td><a href="' + asset['browser_download_url'] +'">' + get_name(asset['name']) + '</a></td>'
        out += '<td>' + get_size(asset['size']) + '</td>'
        out += '<td>' + asset['updated_at'].slice(0,10) + '</td>'
        out += '<td>' + asset['download_count'] + '</td>'

        out += '</tr>'

    }

    document.getElementById("dtable").innerHTML = out;
    document.getElementById("nojs").innerHTML = '';

}
</script>

